AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC"
Parameters:
  VPCMainCIDR:
    Type: String
    Description: "VPC CIDR Block"
    Default: "10.0.0.0/16"
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCMainCIDR
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "04"

  myPrivateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.10.0.0/16"
      EnableDnsSupport: false
      EnableDnsHostnames: false
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "04"
  
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      VpcId: !Ref MyVPC
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.10.0/24
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "04"

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      VpcId: !Ref MyVPC
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.20.0/24
      Tags:
        - Key: Name
          Value: "jake.awe.labs-private"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "4.1.7"

  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "4.1.2"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref Igw

  RouteTableName:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "04"

  PrivateRouteTableName:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: "jake.awe.labs-private"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "04"

  RouteName:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableName
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref Igw

  RouteTableAssocName:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTableName
  
  SecGroupName:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Jake-Group"
      VpcId: !Ref MyVPC
      GroupDescription: "Allow SSH and ICMP"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - CidrIp: 0.0.0.0/0
        IpProtocol: icmp
        FromPort: -1
        ToPort: -1
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - CidrIp: 0.0.0.0/0
        IpProtocol: icmp
        FromPort: -1
        ToPort: -1
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "4.1.4"
  
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: JakeKey
      ImageId: ami-0ab4d1e9cf9a1215a
      InstanceType: t2.micro
      NetworkInterfaces: 
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - !Ref SecGroupName
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "04"

  PrivateEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: JakeKey
      ImageId: ami-0ab4d1e9cf9a1215a
      InstanceType: t2.micro
      NetworkInterfaces: 
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref PrivateSubnet
          GroupSet:
            - !Ref SecGroupName
      Tags:
        - Key: Name
          Value: "jake.awe.labs"
        - Key: user
          Value: "jake.awe.labs"
        - Key: test-u-lesson
          Value: "04"
        - Key: test-u-lab
          Value: "04"
  
  EIPName:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyEC2Instance

  NewEIPName:
    Type: AWS::EC2::EIP

  NAT:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - NewEIPName
         - AllocationId
      SubnetId:
         Ref: PublicSubnet
      Tags:
      - Key: stack
        Value: production
  
  PrivateRouteName:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableName
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NAT

  PrivateRouteTableAssocName:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTableName

  
  MyNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: "jake.awe.labs"
      - Key: user
        Value: "jake.awe.labs"
      - Key: test-u-lesson
        Value: "04"
      - Key: test-u-lab
        Value: "04"

  InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref MyNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  OutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref MyNetworkAcl
       RuleNumber: 100
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  NETACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref MyNetworkAcl
      SubnetId: !Ref PublicSubnet

  PrivateMyNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: "jake.awe.labs-private"
      - Key: user
        Value: "jake.awe.labs"
      - Key: test-u-lesson
        Value: "04"
      - Key: test-u-lab
        Value: "04"
  
  PrivateInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref PrivateMyNetworkAcl
       RuleNumber: 101
       Protocol: -1
       RuleAction: allow
       CidrBlock: 10.0.10.0/24

  PrivateOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref PrivateMyNetworkAcl
       RuleNumber: 101
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  PrivateNETACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref PrivateMyNetworkAcl
      SubnetId: !Ref PrivateSubnet

  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref myPrivateVPC

  PeeringRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref RouteTable
      VpcPeeringConnectionId: !Ref myVPCPeeringConnection

  myPrivateEC2Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref myPrivateVPC
      CidrBlock: 10.10.1.0/24
  
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref myPrivateEC2Subnet
      RouteTableId: !Ref RouteTable
  
  myVPCPeeringConnection:
    Type: 'AWS::EC2::VPCPeeringConnection'
    Properties:
      VpcId: !Ref MyVPC
      PeerVpcId: !Ref myPrivateVPC
      
  
  PeeringRoute2:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: "10.10.0.0/16"
      RouteTableId: !Ref RouteTableName
      VpcPeeringConnectionId: !Ref myVPCPeeringConnection
  
  myPrivateVPCEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Private instance security group
      VpcId: !Ref myPrivateVPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
  myVPCEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Public instance security group
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  myPrivateInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: JakeKey
      NetworkInterfaces: 
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref myPrivateEC2Subnet
          GroupSet:
            - !Ref myPrivateVPCEC2SecurityGroup
      ImageId: ami-0ab4d1e9cf9a1215a
      Tags:
        - Key: Name
          Value: "jake.awe.labs-st"
  
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: testjake
      Tags:
        - Key: Name
          Value: jakes3

  S3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
            Resource:
              - 'arn:aws:s3:::test-jake.awe.labs/*'
      RouteTableIds:
        - !Ref RouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref myPrivateVPC

Outputs:
  MyVPC:
    Value: !Ref MyVPC
  PublicSubnet:
    Value: !Ref PublicSubnet
    Export:
      Name: JakePublicSubnet
  RouteTableName:
    Value: !Ref RouteTableName
  MyEC2Instance:
    Value: !Ref MyEC2Instance
  InstancePrivateIp:
    Value: !GetAtt MyEC2Instance.PrivateIp
  PublicIp:
    Value: !Ref EIPName
  PublicSecurityGroup:
    Value: !Ref SecGroupName
    Export:
      Name: JakeSecGroupName
  