
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  apiGatewayName:
    Type: String
    Default: query-gateway
  apiGatewayStageName:
    Type: String
    AllowedPattern: '[a-z0-9]+'
    Default: call
  lambdaFunctionName:
    Type: String
    AllowedPattern: '[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+'
    Default: jakeQueryFunction
Resources:
  apiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: API Gateway
      EndpointConfiguration:
        Types:
        - REGIONAL
      Name:
        Ref: apiGatewayName
  apiGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Fn::GetAtt:
              - lambdaFunction
              - Arn
      ResourceId:
        Fn::GetAtt:
        - apiGateway
        - RootResourceId
      RestApiId:
        Ref: apiGateway
  apiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - apiGatewayRootMethod
    Properties:
      RestApiId:
        Ref: apiGateway
      StageName:
        Ref: apiGatewayStageName
  lambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - DynamoDB:PutItem
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${lambdaFunctionName}:*
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/JakeUsers
        PolicyName: lambda
  lambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: lambdaFunctionName
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiGateway}/*/*/${lambdaFunction}
  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: nodejs12.x
      FunctionName:
        Ref: lambdaFunctionName
      Role:
        Fn::GetAtt:
        - lambdaRole
        - Arn
      Handler: index.handler
      Code:
        S3Bucket: us-east-1-324320755747-jake-bucket-lambda
        S3Key: d620b6fb7702be745b1a7eb5cd130db6
      Description: Hello AWS!
      TracingConfig:
        Mode: Active
